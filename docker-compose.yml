version: "3.8"

services:
  worker:
    build:
      context: ./
      dockerfile: ./Dockerfile.worker
    #scale: 3
    depends_on:
      - pubsub
      - cache
    networks:
      - pubsub
      - cache
    environment:
      REDIS_HOST: pubsub
      GLOBAL_AGENT_HTTP_PROXY: 'http://cache:3128'
      #http_proxy: 'cache:3128'
      #https_proxy: 'cache:3128'
    restart: unless-stopped
  pubsub:
    image: redis
    networks:
      - pubsub
    restart: unless-stopped
    ports:
      - "6378:6379"
  manager:
    build:
      context: ./
      dockerfile: ./Dockerfile.manager
    restart: unless-stopped
    depends_on:
      - pubsub
      - db
    networks:
      - pubsub
      - database
    environment:
      MONGODB_HOST: db
      REDIS_HOST: pubsub
      MAX_PATH_LENGTH: "${MAX_PATH_LENGTH}"
      MAX_PATH_PROPS: "${MAX_PATH_PROPS}"
    volumes:
      - type: bind
        source: ./data/export
        target: /data/export
<<<<<<< HEAD
    ports:
      - "3000:3000"
=======
  #  cache:
  #    image: datadog/squid
  #    networks:
  #      - cache
  #    volumes:
  #      - type: bind
  #        source: ./logs/squid
  #        target: /var/log/squid
  cache:
    image: salrashid123/squidproxy
    command: /apps/squid/sbin/squid -NsY -f /apps/squid.conf.intercept
    networks:
      - cache
    volumes:
      - type: bind
        source: ./logs/squid
        target: /apps/squid/var/logs
>>>>>>> 7089fd3 (Replace axios with got)
  db:
    image: mongo
    restart: unless-stopped
      #environment:
      #  MONGO_INITDB_ROOT_USERNAME_FILE: /run/secrets/MONGODB_USER
      #  MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/MONGODB_PASS
    volumes:
      - type: bind
        source: ./data/db
        target: /data/db
    ports:
      - "27018:27017"
    networks:
      - database
        #secrets:
        #  MONGODB_PORT:
        #    external: true
        #  MONGODB_USER:
        #    external: true
        #  MONGODB_PASS:
        #    external: true
networks:
  database:
  pubsub:
  cache:
