services:
  manager:
    develop:
      watch:
        - action: rebuild
          path: ./manager/src/
        - action: rebuild
          path: ./common/src/
        - action: rebuild
          path: ./config/src
        - action: rebuild
          path: ./models/src/
    command: npm run dev -- --port ${DERZIS_MNG_PORT} --host
    build:
      context: ./
      dockerfile: ./manager/Dockerfile
      # scale: 3
      args:
        MONGO_HOST: database
        MONGO_PORT: ${MONGO_PORT}
        REDIS_HOST: pubsub
        REDIS_PORT: ${REDIS_PORT}
        DERZIS_MNG_DB_NAME: ${DERZIS_MNG_DB_NAME}
        PORT: ${DERZIS_MNG_PORT}
    restart: unless-stopped
    depends_on:
      - pubsub
      - database
    networks:
      - ps
      - db
    environment:
      MONGO_HOST: database
      MONGO_PORT: ${MONGO_PORT}
      REDIS_HOST: pubsub
      REDIS_PORT: ${REDIS_PORT}
      DERZIS_MNG_DB_NAME: ${DERZIS_MNG_DB_NAME}
      PORT: ${DERZIS_MNG_PORT}
    volumes:
      - type: bind
        source: ./data/export
        target: /data/export
    ports:
      - '${DERZIS_MNG_PORT}:${DERZIS_MNG_PORT}'
  worker:
    develop:
      watch:
        - action: rebuild
          path: ./worker/src/
    build:
      context: ./
      dockerfile: ./worker/Dockerfile
    restart: unless-stopped
    depends_on:
      - pubsub
      - database
    networks:
      - ps
      - db
      - val
    environment:
      MONGO_HOST: database
      MONGO_PORT: ${MONGO_PORT}
      REDIS_HOST: pubsub
      REDIS_PORT: ${REDIS_PORT}
      DERZIS_WRK_DB_NAME: ${DERZIS_WRK_DB_NAME}
  pubsub:
    image: redis
    networks:
      - ps
    restart: unless-stopped
    command: redis-server --port ${REDIS_PORT}
    ports:
      - '${REDIS_PORT}:${REDIS_PORT}'
  database:
    image: mongo
    command: mongod --port ${MONGO_PORT}
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./data/db
        target: /data/db
    ports:
      - '${MONGO_PORT}:${MONGO_PORT}'
    networks:
      - db
  validator:
    build:
      context: ./
      dockerfile: ./validator/Dockerfile
    environment:
      PORT: 80
    ports:
      - ${VALIDATOR_PORT}:80
    networks:
      val:
        aliases:
          - derzis-val001.andrefs.com
          - derzis-val002.andrefs.com            
          - derzis-val003.andrefs.com
          - derzis-val004.andrefs.com
          - derzis-val005.andrefs.com
    command: graph-1758276655616
networks:
  db:
    name: db
  ps:
    name: ps
  val:
    name: val
